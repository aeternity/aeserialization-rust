use crate::data::value::Value;

pub enum FateOp {
    RETURN,
    RETURNR(Value),
    CALL(Value),
    CALL_R(Value, Value, Value, Value, Value),
    CALL_T(Value),
    CALL_GR(Value, Value, Value, Value, Value, Value),
    JUMP(Value),
    JUMPIF(Value, Value),
    SWITCH_V2(Value, Value, Value),
    SWITCH_V3(Value, Value, Value, Value),
    SWITCH_VN(Value, Value),
    CALL_VALUE,
    PUSH(Value),
    DUPA(Value),
    DUP(Value),
    POP(Value),
    INCA(Value),
    INC(Value),
    DECA(Value),
    DEC(Value),
    ADD(Value, Value),
    SUB(Value, Value),
    MUL(Value, Value),
    DIV(Value, Value),
    MOD(Value, Value),
    POW(Value, Value),
    STORE(Value),
    SHA3(Value),
    SHA256(Value),
    BLAKE2B(Value),
    LT(Value, Value),
    GT(Value, Value),
    EQ(Value, Value),
    ELT(Value, Value),
    EGT(Value, Value),
    NEQ(Value, Value),
    AND(Value, Value),
    OR(Value, Value),
    NOT(Value),
    TUPLE(Value),
    ELEMENT(Value, Value),
    SETELEMENT(Value, Value, Value),
    MAP_EMPTY,
    MAP_LOOKUP(Value, Value),
    MAP_LOOKUPD(Value, Value, Value),
    MAP_UPDATE(Value, Value, Value),
    MAP_DELETE(Value, Value),
    MAP_MEMBER(Value, Value),
    MAP_FROM_LIST(Value),
    MAP_SIZE(Value),
    MAP_TO_LIST(Value),
    IS_NIL(Value),
    CONS(Value, Value),
    HD(Value),
    TL(Value),
    LENGTH(Value),
    NIL,
    APPEND(Value, Value),
    STR_JOIN(Value, Value),
    INT_TO_STR(Value),
    ADDR_TO_STR(Value),
    STR_REVERSE(Value),
    STR_LENGTH(Value),
    BYTES_TO_INT(Value),
    BYTES_TO_STR(Value),
    BYTES_CONCAT(Value, Value),
    BYTES_SPLIT(Value, Value),
    INT_TO_ADDR(Value),
    VARIANT(Value, Value, Value),
    VARIANT_TEST(Value, Value),
    VARIANT_ELEMENT(Value, Value),
    BITS_NONEA,
    BITS_NONE,
    BITS_ALLA,
    BITS_ALL,
    BITS_ALL_N(Value),
    BITS_SET(Value, Value),
    BITS_CLEAR(Value, Value),
    BITS_TEST(Value, Value),
    BITS_SUM(Value),
    BITS_OR(Value, Value),
    BITS_AND(Value, Value),
    BITS_DIFF(Value, Value),
    BALANCE,
    ORIGIN,
    CALLER,
    BLOCKHASH(Value),
    BENEFICIARY,
    TIMESTAMP,
    GENERATION,
    MICROBLOCK,
    DIFFICULTY,
    GASLIMIT,
    GAS,
    ADDRESS,
    GASPRICE,
    LOG0(Value),
    LOG1(Value, Value),
    LOG2(Value, Value, Value),
    LOG3(Value, Value, Value, Value),
    LOG4(Value, Value, Value, Value, Value),
    SPEND(Value, Value),
    ORACLE_REGISTER(Value, Value, Value, Value, Value, Value),
    ORACLE_QUERY(Value, Value, Value, Value, Value, Value, Value),
    ORACLE_RESPOND(Value, Value, Value, Value, Value, Value),
    ORACLE_EXTEND(Value, Value, Value),
    ORACLE_GET_ANSWER(Value, Value, Value, Value),
    ORACLE_GET_QUESTION(Value, Value, Value, Value),
    ORACLE_QUERY_FEE(Value),
    AENS_RESOLVE(Value, Value, Value),
    AENS_PRECLAIM(Value, Value, Value),
    AENS_CLAIM(Value, Value, Value, Value, Value),
    AENS_UPDATE(Value, Value, Value, Value, Value, Value),
    AENS_TRANSFER(Value, Value, Value, Value),
    AENS_REVOKE(Value, Value, Value),
    BALANCE_OTHER(Value),
    VERIFY_SIG(Value, Value, Value),
    VERIFY_SIG_SECP256K1(Value, Value, Value),
    CONTRACT_TO_ADDRESS(Value),
    AUTH_TX_HASH,
    ORACLE_CHECK(Value, Value, Value),
    ORACLE_CHECK_QUERY(Value, Value, Value, Value),
    IS_ORACLE(Value),
    IS_CONTRACT(Value),
    IS_PAYABLE(Value),
    CREATOR,
    ECVERIFY_SECP256K1(Value, Value, Value),
    ECRECOVER_SECP256K1(Value, Value),
    ADDRESS_TO_CONTRACT(Value),
    BLS12_381_G1_NEG(Value),
    BLS12_381_G1_NORM(Value),
    BLS12_381_G1_VALID(Value),
    BLS12_381_G1_IS_ZERO(Value),
    BLS12_381_G1_ADD(Value, Value),
    BLS12_381_G1_MUL(Value, Value),
    BLS12_381_G2_NEG(Value),
    BLS12_381_G2_NORM(Value),
    BLS12_381_G2_VALID(Value),
    BLS12_381_G2_IS_ZERO(Value),
    BLS12_381_G2_ADD(Value, Value),
    BLS12_381_G2_MUL(Value, Value),
    BLS12_381_GT_INV(Value),
    BLS12_381_GT_ADD(Value, Value),
    BLS12_381_GT_MUL(Value, Value),
    BLS12_381_GT_POW(Value, Value),
    BLS12_381_GT_IS_ONE(Value),
    BLS12_381_PAIRING(Value, Value),
    BLS12_381_MILLER_LOOP(Value, Value),
    BLS12_381_FINAL_EXP(Value),
    BLS12_381_INT_TO_FR(Value),
    BLS12_381_INT_TO_FP(Value),
    BLS12_381_FR_TO_INT(Value),
    BLS12_381_FP_TO_INT(Value),
    AENS_LOOKUP(Value),
    ORACLE_EXPIRY(Value),
    AUTH_TX,
    STR_TO_LIST(Value),
    STR_FROM_LIST(Value),
    STR_TO_UPPER(Value),
    STR_TO_LOWER(Value),
    CHAR_TO_INT(Value),
    CHAR_FROM_INT(Value),
    CALL_PGR(Value, Value, Value, Value, Value, Value, Value),
    CREATE(Value, Value, Value),
    CLONE(Value, Value, Value, Value),
    CLONE_G(Value, Value, Value, Value, Value),
    BYTECODE_HASH(Value),
    FEE,
    ADDRESS_TO_BYTES(Value),
    POSEIDON(Value, Value),
    MULMOD(Value, Value, Value),
    BAND(Value, Value),
    BOR(Value, Value),
    BXOR(Value, Value),
    BNOT(Value),
    BSL(Value, Value),
    BSR(Value, Value),
    BYTES_SPLIT_ANY(Value, Value),
    BYTES_SIZE(Value),
    BYTES_TO_FIXED_SIZE(Value, Value),
    INT_TO_BYTES(Value, Value),
    STR_TO_BYTES(Value),
    DBG_LOC(Value, Value),
    DBG_DEF(Value, Value),
    DBG_UNDEF(Value, Value),
    DBG_CONTRACT(Value),
    DEACTIVATE,
    ABORT(Value),
    EXIT(Value),
    NOP,
}
